language: python
python: 3.9

before_script:
  - pip install gen3utils --upgrade

script:
  # validate manifest.json, etlMapping.yaml and gitops.json:
  - |
    # for push builds, TRAVIS_BRANCH is the current branch name; for PR
    # builds, it's the name of the branch targeted by the PR.
    # We need the latter, which we can't get for push builds, so the tests
    # only run properly on PRs.
    changed_files=$(git diff --name-only HEAD..$TRAVIS_BRANCH)
    envs=()
    for file in $changed_files; do
      envs+=($(echo "$file" | cut -d "/" -f1))
    done

    # remove duplicates
    envs=($(printf "%s\n" "${envs[@]}" | sort -u)); echo  "${uniq[@]}"
    echo "Updated: ${envs[@]}"

    PR_LABELS=$(curl -s "https://api.github.com/repos/${TRAVIS_REPO_SLUG}/issues/${TRAVIS_PULL_REQUEST}/labels")
    if [[ $PR_LABELS == *"skip-gen3utils"* ]]; then
      echo "skipping gen3utils checks..."
      exit 0
    fi

    for dir in "${envs[@]}"; do
      echo " Validating $dir"
      man=$dir/manifest.json; etl=$dir/etlMapping.yaml; ptlcfg=$dir/portal/gitops.json;

      # validate manifest.json
      if [ -f $man ]; then
        gen3utils validate-manifest $man || exit 1
      fi

      # validate ETL mapping
      if [ -f $man ] && [ -f $etl ]; then
        gen3utils validate-etl-mapping $etl $man || exit 1
      fi

      # validate portal configuration
      if [ -f $man ] && [ -f $etl ] && [ -f $ptlcfg ]; then
        if [[ $TRAVIS_PULL_REQUEST != false ]]; then
          gen3utils validate-portal-config $etl $man $ptlcfg uc-cdis/cdis-manifest $TRAVIS_PULL_REQUEST || exit 1
        else
          gen3utils validate-portal-config $etl $man $ptlcfg || exit 1
        fi
      fi
    done

  # comment on PRs with relevant deployment changes:
  - if [[ $TRAVIS_PULL_REQUEST != false ]]; then gen3utils post-deployment-changes uc-cdis/cdis-manifest $TRAVIS_PULL_REQUEST; fi
